<?xml version="1.0" encoding="utf-8"?> 
<rss version="2.0">
 <channel>
  <title>The Lost Packet: The Lost Packet</title>
  <description>The Lost Packet: The Lost Packet</description>
  <link>https://pykello.github.com//index.html</link>
  <lastBuildDate>Wed, 20 Mar 2019 07:00:00 UT</lastBuildDate>
  <pubDate>Wed, 20 Mar 2019 07:00:00 UT</pubDate>
  <ttl>1800</ttl>
  <item>
   <title>PostgreSQL Internals: TRUNCATE, Part 1</title>
   <link>https://pykello.github.com//2019/03/postgresql-internals-truncate-part-1.html?utm_source=all&amp;utm_medium=RSS</link>
   <guid isPermaLink="false">urn:https-pykello-github-com:-2019-03-postgresql-internals-truncate-part-1-html</guid>
   <pubDate>Wed, 20 Mar 2019 07:00:00 UT</pubDate>
   <author>Hadi Moshayedi</author>
   <description>
&lt;p&gt;You can use TRUNCATE in postgres to delete all of the rows in a table. The main advantage of it compared to using DELETE is performance. For example, using DELETE to delete all rows in a table with 1 million rows takes about 2.3 seconds, but truncating the same table would take about 10ms.&lt;/p&gt;

&lt;p&gt;But how does postgres implement TRUNCATE that it is so fast?&lt;/p&gt;&lt;a href="https://pykello.github.com//2019/03/postgresql-internals-truncate-part-1.html?utm_source=all&amp;amp;utm_medium=RSS"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</description></item>
  <item>
   <title>cstore_fdw and 'Files are Hard'</title>
   <link>https://pykello.github.com//2015/12/cstore-fdw-and-files-are-hard.html?utm_source=all&amp;utm_medium=RSS</link>
   <guid isPermaLink="false">urn:https-pykello-github-com:-2015-12-cstore-fdw-and-files-are-hard-html</guid>
   <pubDate>Tue, 15 Dec 2015 08:00:00 UT</pubDate>
   <author>Hadi Moshayedi</author>
   <description>
&lt;p&gt;I recently came accross the "&lt;a href="http://danluu.com/file-consistency/"&gt;Files are hard&lt;/a&gt;" article, and it made me wonder how reliable is cstore_fdw&amp;rsquo;s design and implementation. &lt;a href="https://github.com/citusdata/cstore_fdw/"&gt;cstore_fdw&lt;/a&gt; is a columnar store for PostgreSQL that I designed and developed in my previous job at Citus Data.&lt;/p&gt;

&lt;p&gt;I am writing this post so my decisions for cstore_fdw&amp;rsquo;s design get reviewed by more people, and I get some feedback and improve the design.&lt;/p&gt;&lt;a href="https://pykello.github.com//2015/12/cstore-fdw-and-files-are-hard.html?utm_source=all&amp;amp;utm_medium=RSS"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</description></item>
  <item>
   <title>Haskell Skyline</title>
   <link>https://pykello.github.com//2015/12/haskell-skyline.html?utm_source=all&amp;utm_medium=RSS</link>
   <guid isPermaLink="false">urn:https-pykello-github-com:-2015-12-haskell-skyline-html</guid>
   <pubDate>Sat, 12 Dec 2015 08:00:00 UT</pubDate>
   <author>Hadi Moshayedi</author>
   <description>
&lt;p&gt;Recently I started learning Haskell by studying the &lt;a href="https://www.edx.org/course/introduction-functional-programming-delftx-fp101x-0"&gt;Intro to FP Programming&lt;/a&gt; course on Edx. Since then, I try to model different problems using Haskell.&lt;/p&gt;

&lt;p&gt;One of these problems is the Skyline problem, which goes like this:&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;You are given a set of rectangular buildings in a city, and you should return the skyline view of the city. Input is a sequence of tuples &lt;code&gt;(x_{left}, height,
x_{right})&lt;/code&gt;, each describing a building. The output is a sequence of pairs &lt;code&gt;(x, height)&lt;/code&gt; meaning that the height of skyline changed to &lt;code&gt;height&lt;/code&gt; at the given x coordinate.&lt;/p&gt;&lt;/blockquote&gt;&lt;a href="https://pykello.github.com//2015/12/haskell-skyline.html?utm_source=all&amp;amp;utm_medium=RSS"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</description></item></channel></rss>